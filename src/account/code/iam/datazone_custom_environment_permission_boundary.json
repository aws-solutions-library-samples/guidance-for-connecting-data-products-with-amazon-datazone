{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "CreateGlueConnection",
            "Effect": "Allow",
            "Action": [
                "ec2:CreateTags",
                "ec2:DeleteTags"
            ],
            "Resource": [
                "arn:aws:ec2:*:*:network-interface/*"
            ],
            "Condition": {
                "ForAllValues:StringEquals": {
                    "aws:TagKeys": [
                        "aws-glue-service-resource"
                    ]
                }
            }
        },
        {
            "Sid": "GlueOperations",
            "Effect": "Allow",
            "Action": [
                "glue:*DataQuality*",
                "glue:*Partition*",
                "glue:*Connection*",
                "glue:*Table*",
                "glue:*Crawl*",
                "glue:*Database*",
                "glue:*Job*",
                "glue:*Workflow*",
                "glue:*Blueprint*",
                "glue:ListSchemas",
                "glue:NotifyEvent"
            ],
            "Resource": "*",
            "Condition": {
                "Null": {
                    "aws:ResourceTag/AmazonDataZoneEnvironment": "false"
                }
            }
        },
        {
            "Sid": "PassRole",
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": [
                "arn:aws:iam::*:role/datazone*"
            ],
            "Condition": {
                "StringEquals": {
                    "iam:PassedToService": "glue.amazonaws.com"
                }
            }
        },
        {
            "Sid": "SameAccountKmsOperations",
            "Effect": "Allow",
            "Action": [
                "kms:DescribeKey",
                "kms:Decrypt",
                "kms:ListKeys"
            ],
            "Resource": "*",
            "Condition": {
                "StringNotEquals": {
                    "aws:ResourceAccount": "${aws:PrincipalAccount}"
                }
            }
        },
        {
            "Sid": "KmsOperationsWithResourceTag",
            "Effect": "Allow",
            "Action": [
                "kms:DescribeKey",
                "kms:Decrypt",
                "kms:ListKeys",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:Verify",
                "kms:Sign"
            ],
            "Resource": "*",
            "Condition": {
                "Null": {
                    "aws:ResourceTag/AmazonDataZoneEnvironment": "false"
                }
            }
        },
        {
            "Sid": "AnalyticsOperations",
            "Effect": "Allow",
            "Action": [
                "datazone:*",
                "sqlworkbench:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "QueryOperations",
            "Effect": "Allow",
            "Action": [
                "athena:*Statement*",
                "athena:*Quer*",
                "athena:*Notebook*",
                "athena:*Database*",
                "athena:*Table*",
                "athena:*WorkGroup*",
                "athena:*Catalog*",
                "athena:ListEngineVersions",
                "athena:ListTagsForResource",
                "athena:*Execution*",
                "athena:*Session*",
                "cloudformation:*",
                "config:*",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:Describe*",
                "glue:*DataQuality*",
                "glue:*Partition*",
                "glue:*Connection*",
                "glue:*Table*",
                "glue:*Crawl*",
                "glue:*Database*",
                "glue:*Job*",
                "glue:*Workflow*",
                "glue:*Blueprint*",
                "glue:ListSchemas",
                "glue:NotifyEvent",
                "iam:List*",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "lambda:InvokeFunction",
                "logs:*Quer*",
                "logs:Describe*",
                "logs:Get*",
                "logs:PutLogEvents",
                "logs:CreateLogStream",
                "logs:FilterLogEvents",
                "lakeformation:Get*",
                "lakeformation:ListPermissions",
                "redshift-data:ListTables",
                "redshift-data:DescribeTable",
                "redshift-data:ListSchemas",
                "redshift-data:ListDatabases",
                "redshift-data:ExecuteStatement",
                "redshift-data:GetStatementResult",
                "redshift-data:DescribeStatement",
                "redshift:CreateClusterUser",
                "redshift:DescribeClusters",
                "redshift:DescribeDataShares",
                "redshift:GetClusterCredentials",
                "redshift:GetClusterCredentialsWithIAM",
                "redshift:JoinGroup",
                "redshift-serverless:ListNamespaces",
                "redshift-serverless:ListWorkgroups",
                "redshift-serverless:GetNamespace",
                "redshift-serverless:GetWorkgroup",
                "redshift-serverless:GetCredentials",
                "secretsmanager:ListSecrets",
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "servicecatalog:*",
                "ssm:*",
                "tag:GetResources"
            ],
            "Resource": "*"
        },
        {
            "Sid": "SecretsManagerOperationsWithTagKeys",
            "Effect": "Allow",
            "Action": [
                "secretsmanager:CreateSecret",
                "secretsmanager:TagResource"
            ],
            "Resource": "arn:aws:secretsmanager:*:*:secret:AmazonDataZone-*",
            "Condition": {
                "StringLike": {
                    "aws:ResourceTag/AmazonDataZoneDomain": "*",
                    "aws:ResourceTag/AmazonDataZoneProject": "*"
                },
                "Null": {
                    "aws:TagKeys": "false"
                },
                "ForAllValues:StringEquals": {
                    "aws:TagKeys": [
                        "AmazonDataZoneDomain",
                        "AmazonDataZoneProject"
                    ]
                }
            }
        },
        {
            "Sid": "DataZoneS3Buckets",
            "Effect": "Allow",
            "Action": [
                "s3:AbortMultipartUpload",
                "s3:*Object*"
            ],
            "Resource": [
                "arn:aws:s3:::*/datazone/*"
            ]
        },
        {
            "Sid": "DataZoneS3BucketLocation",
            "Effect": "Allow",
            "Action": [
                "s3:GetBucketLocation"
            ],
            "Resource": "*"
        },
        {
            "Sid": "ListDataZoneS3Bucket",
            "Effect": "Allow",
            "Action": [
                "s3:ListBucket"
            ],
            "Resource": [
                "*"
            ],
            "Condition": {
                "StringLike": {
                    "s3:prefix": [
                        "*/datazone/*",
                        "datazone/*"
                    ]
                }
            }
        },
        {
            "Sid": "NotDeniedOperations",
            "Effect": "Deny",
            "NotAction": [
                "datazone:*",
                "sqlworkbench:*",
                "athena:*Statement*",
                "athena:*Quer*",
                "athena:*Notebook*",
                "athena:*Database*",
                "athena:*Table*",
                "athena:*WorkGroup*",
                "athena:*Catalog*",
                "athena:ListEngineVersions",
                "athena:ListTagsForResource",
                "athena:*Execution*",
                "athena:*Session*",
                "ec2:CreateNetworkInterface",
                "cloudformation:*",
                "config:*",
                "ec2:CreateTags",
                "ec2:DeleteNetworkInterface",
                "ec2:DeleteTags",
                "ec2:Describe*",
                "glue:*DataQuality*",
                "glue:*Partition*",
                "glue:*Connection*",
                "glue:*Table*",
                "glue:*Crawl*",
                "glue:*Database*",
                "glue:*Job*",
                "glue:*Workflow*",
                "glue:*Blueprint*",
                "glue:ListSchemas",
                "glue:NotifyEvent",
                "iam:List*",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:PassRole",
                "kms:DescribeKey",
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
                "kms:ListKeys",
                "kms:Verify",
                "kms:Sign",
                "lambda:InvokeFunction",
                "logs:*Quer*",
                "logs:Describe*",
                "logs:Get*",
                "logs:PutLogEvents",
                "logs:CreateLogStream",
                "logs:FilterLogEvents",
                "lakeformation:Get*",
                "lakeformation:ListPermissions",
                "redshift-data:ListTables",
                "redshift-data:DescribeTable",
                "redshift-data:ListSchemas",
                "redshift-data:ListDatabases",
                "redshift-data:ExecuteStatement",
                "redshift-data:GetStatementResult",
                "redshift-data:DescribeStatement",
                "redshift:CreateClusterUser",
                "redshift:DescribeClusters",
                "redshift:DescribeDataShares",
                "redshift:GetClusterCredentials",
                "redshift:GetClusterCredentialsWithIAM",
                "redshift:JoinGroup",
                "redshift-serverless:ListNamespaces",
                "redshift-serverless:ListWorkgroups",
                "redshift-serverless:GetNamespace",
                "redshift-serverless:GetWorkgroup",
                "redshift-serverless:GetCredentials",
                "s3:AbortMultipartUpload",
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
                "s3:GetObject",
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:PutObject",
                "s3:PutObjectRetention",
                "s3:ReplicateObject",
                "s3:RestoreObject",
                "secretsmanager:CreateSecret",
                "secretsmanager:ListSecrets",
                "secretsmanager:TagResource",
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "servicecatalog:*",
                "ssm:*",
                "tag:GetResources"
            ],
            "Resource": [
                "*"
            ]
        }
    ]
}