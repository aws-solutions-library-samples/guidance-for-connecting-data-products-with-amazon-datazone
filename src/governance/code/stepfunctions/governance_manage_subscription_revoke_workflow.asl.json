{
    "Comment": "State machine to orchestrate activities to manage dataset subscription revocations on consumer and producer side",
    "StartAt": "Get Subscription Details",
    "States": {
        "Get Subscription Details": {
            "Type": "Task",
            "Next": "Which asset type?",
            "Parameters": {
                "FunctionName": "${g_get_subscription_details_lambda_arn}",
                "Payload.$": "$"
            },
            "Resource": "arn:aws:states:::lambda:invoke",
            "ResultPath": "$.SubscriptionDetails",
            "ResultSelector": {
                "DomainId.$": "$.Payload.DomainId",
                "ProducerProjectDetails.$": "$.Payload.ProducerProjectDetails",
                "ConsumerProjectDetails.$": "$.Payload.ConsumerProjectDetails",
                "ListingDetails.$": "$.Payload.ListingDetails",
                "AssetDetails.$": "$.Payload.AssetDetails"
            }
        },
        "Which asset type?": {
            "Type": "Choice",
            "Default": "Unsupported asset type",
            "Choices": [
                {
                    "Next": "Get cross-account resource ARNs",
                    "StringEquals": "GlueTableAssetType",
                    "Variable": "$.SubscriptionDetails.AssetDetails.Type"
                }
            ]
        },
        "Unsupported asset type": {
            "Type": "Fail",
            "Error": "Unsupported asset type"
        },
        "Get cross-account resource ARNs": {
            "Type": "Pass",
            "Next": "Manage Subscription Revoke - Producer",
            "Parameters": {
                "ProducerStateMachineArn.$": "States.Format('arn:aws:states:{}:{}:stateMachine:${p_manage_subscription_revoke_state_machine_name}', $.SubscriptionDetails.AssetDetails.GlueTableDetails.Region, $.SubscriptionDetails.AssetDetails.GlueTableDetails.AccountId)",
                "ProducerAssumeRoleArn.$": "States.Format('arn:aws:iam::{}:role/${a_cross_account_assume_role_name}', $.SubscriptionDetails.AssetDetails.GlueTableDetails.AccountId)",
                "ConsumerStateMachineArn.$": "States.Format('arn:aws:states:{}:{}:stateMachine:${c_manage_subscription_revoke_state_machine_name}', $.SubscriptionDetails.ConsumerProjectDetails.Region, $.SubscriptionDetails.ConsumerProjectDetails.AccountId)",
                "ConsumerAssumeRoleArn.$": "States.Format('arn:aws:iam::{}:role/${a_cross_account_assume_role_name}', $.SubscriptionDetails.ConsumerProjectDetails.AccountId)"
            },
            "ResultPath": "$.CrossAccountResources"
        },
        "Manage Subscription Revoke - Producer": {
            "Type": "Task",
            "Next": "Manage Subscription Revoke - Consumer",
            "Parameters": {
                "Input": {
                    "SubscriptionDetails.$": "$.SubscriptionDetails"
                },
                "StateMachineArn.$": "$.CrossAccountResources.ProducerStateMachineArn"
            },
            "Resource": "arn:aws:states:::states:startExecution.sync:2",
            "Credentials": {
                "RoleArn.$": "$.CrossAccountResources.ProducerAssumeRoleArn"
            },
            "ResultPath": "$.ProducerRevokeDetails",
            "ResultSelector": {
                "SecretArn.$": "$.Output.RevokeSubscriptionDetails.SecretArn",
                "SecretName.$": "$.Output.RevokeSubscriptionDetails.SecretName",
                "SecretDeleted.$": "$.Output.DeleteKeepSubscriptionSecretDetails.SecretDeleted",
                "SecretDeletionDate.$": "$.Output.DeleteKeepSubscriptionSecretDetails.SecretDeletionDate",
                "SecretRecoveryWindowInDays.$": "$.Output.DeleteKeepSubscriptionSecretDetails.SecretRecoveryWindowInDays"
            }
        },
        "Manage Subscription Revoke - Consumer": {
            "Type": "Task",
            "End": true,
            "Parameters": {
                "Input": {
                    "SubscriptionDetails.$": "$.SubscriptionDetails",
                    "ProducerRevokeDetails.$": "$.ProducerRevokeDetails"
                },
                "StateMachineArn.$": "$.CrossAccountResources.ConsumerStateMachineArn"
            },
            "Resource": "arn:aws:states:::states:startExecution.sync:2",
            "Credentials": {
                "RoleArn.$": "$.CrossAccountResources.ConsumerAssumeRoleArn"
            },
            "ResultPath": "$.ConsumerRevokeDetails",
            "ResultSelector": {
                "DataZoneConsumerEnvironmentId.$": "$.Output.RemoveSubscriptionRecordsDetails.DataZoneConsumerEnvironmentId",
                "DataZoneAssetId.$": "$.Output.RemoveSubscriptionRecordsDetails.DataZoneAssetId",
                "SecretArn.$": "$.Output.DeleteSubscriptionSecretDetails.SecretArn",
                "SecretName.$": "$.Output.DeleteSubscriptionSecretDetails.SecretName",
                "SecretDeleted.$": "$.Output.DeleteSubscriptionSecretDetails.SecretDeleted",
                "SecretDeletionDate.$": "$.Output.DeleteSubscriptionSecretDetails.SecretDeletionDate",
                "SecretRecoveryWindowInDays.$": "$.Output.DeleteSubscriptionSecretDetails.SecretRecoveryWindowInDays"
            }
        }
    }
}